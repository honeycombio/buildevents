version: 2.1

orbs:
  buildevents: honeycombio/buildevents@0.0.2

executors:
  linuxgo:
    working_directory: /go/src/github.com/honeycombio/buildevents
    docker:
      - image: circleci/golang:1.10

jobs:
  setup:
    executor: linuxgo
    steps:
      - buildevents/start_trace
  test:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - buildevents/berun:
                bename: \"go test\"
                becommand: go test -v ./...
  build:
    executor: linuxgo
    steps:
      - buildevents/with_job_span:
          steps:
            - checkout
            - buildevents/berun:
                bename: \"go install\"
                becommand: go install -ldflags "-X main.Version=${CIRCLE_TAG}" ./...
            - run: mkdir -v artifacts; cp -v $GOPATH/bin/buildevents artifacts/
            - persist_to_workspace:
                root: artifacts
                paths:
                  - buildevents
  publish:
    docker:
      - image: cibuilds/github:0.12.1
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./artifacts/buildevents
  final:
    executor: linuxgo
    steps:
      - buildevents/finish_trace:
          result: success

workflows:
  build:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - setup
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - final:
          requires:
            - build
          filters:
            tags:
              only: /.*/

