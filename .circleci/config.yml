version: 2.1

executors:
  linuxgo:
    docker:
      - image: cimg/go:1.23

commands:
  go-build:
    parameters:
      os:
        description: Target operating system
        type: enum
        enum: ["linux", "darwin", "windows"]
        default: "linux"
      arch:
        description: Target architecture
        type: enum
        enum: ["386", "amd64", "arm64"]
        default: "amd64"
      suffix:
        description: Optional suffix
        type: string
        default: ""
    steps:
      - run: |
          GOOS=<< parameters.os >> \
          GOARCH=<< parameters.arch >> \
          CGO_ENABLED=0 \
          go build -ldflags "-X main.Version=${CIRCLE_TAG}" \
          -o $GOPATH/bin/buildevents-<< parameters.os >>-<< parameters.arch >><< parameters.suffix >> \
          ./...

jobs:
  test:
    executor: linuxgo
    steps:
      - checkout
      - run:
          name: go_test
          command: go test -v ./...
      - run: make verify-licenses

  build:
    executor: linuxgo
    steps:
      - checkout
      - go-build:
          os: linux
          arch: "386"
      - go-build:
          os: linux
          arch: amd64
      - go-build:
          os: darwin
          arch: amd64
      - go-build:
          os: darwin
          arch: arm64
      - go-build:
          os: linux
          arch: arm64
      - go-build:
          os: windows
          arch: "386"
          suffix: ".exe"
      - go-build:
          os: windows
          arch: amd64
          suffix: ".exe"
      - go-build:
          os: windows
          arch: arm64
          suffix: ".exe"
      - run: mkdir -v artifacts; cp -v $GOPATH/bin/buildevents-* artifacts/
      - run: tar -cvf artifacts/buildevents.tar artifacts/buildevents-*
      - persist_to_workspace:
          root: artifacts
          paths:
            - buildevents.tar
      - store_artifacts:
          path: artifacts/

  smoketest:
    executor: linuxgo
    steps:
      - attach_workspace:
          at: artifacts
      - run: tar -xvf artifacts/buildevents.tar
      - run:
          name: "Subcommand success = success"
          command: |
            result=$(artifacts/buildevents-linux-amd64 cmd buildId stepId name -- true >/dev/null && echo "worked")
            if [ "$result" != "worked" ]; then
              exit 1
            fi
      - run:
          name: "Subcommand failure = failure"
          command: |
            result=$(artifacts/buildevents-linux-amd64 cmd buildId stepId name -- false > /dev/null || echo "worked" )
            if [ "$result" != "worked" ]; then
              exit 1
            fi

  publish:
    docker:
      - image: cibuilds/github:0.13.0
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            echo "about to publish to tag ${CIRCLE_TAG}"
            tar -xvf artifacts/buildevents.tar
            rm -rf artifacts/buildevents.tar
            ls -l ./artifacts
            ghr -draft -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./artifacts

workflows:
  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - smoketest:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - publish:
          context: Honeycomb Secrets for Public Repos
          requires:
            - smoketest
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
